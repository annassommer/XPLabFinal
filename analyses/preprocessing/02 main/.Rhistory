stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_num
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_num
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\raw\\results_2019-22-07.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, submission_id)
pic_data
subj_data <- select(data, category, age, gender, languages, submission_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$submission_id), ]
subj_data
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_num
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
write_csv(subj_data, "C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\clean\\Subject_data_clean.csv")
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
knitr::opts_chunk$set(echo = TRUE)
install.packages("contrib.url")
library(tidyverse)
library(effsize)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
data
ggplot(data, aes(x=gender, y=age, fill = gender)) +
geom_boxplot()
summarized_results <- data %>%
dplyr::group_by(gender) %>%
dplyr::summarize(mean_age = mean(age), median_age = median(age), sd_age = sd(age))
summarized_results
male <-sum(data$gender == "männlich")
female <-sum(data$gender == "weiblich")
print("Männliche Teilnehmer: ")
print(male)
print("weibliche Teilnehmer: ")
print(female)
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
dplyr::group_by(d_t, question) %>%
dplyr::summarise(
median = median(response, na.rm = TRUE),
mean = mean(response, na.rm = TRUE),
sd = sd(response, na.rm = TRUE)
)
analyse <- brm(response ~ question + (1|submission_id), family = "cumulative", data=d_t)
library(effsize)
library(brms)
library(tidyverse)
library(readr)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
dplyr::group_by(d_t, question) %>%
dplyr::summarise(
median = median(response, na.rm = TRUE),
mean = mean(response, na.rm = TRUE),
sd = sd(response, na.rm = TRUE)
)
analyse <- brm(response ~ question + (1|submission_id), family = "cumulative", data=d_t)
pic_data
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
data
trait_data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_final.csv")
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\raw\\results_2019-22-07.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
pic_data <-filter(data, trial_name == 'rate_face')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\raw\\results_2019-22-07.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, submission_id)
pic_data
subj_data <- select(data, category, age, gender, languages, submission_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$submission_id), ]
subj_data
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_num
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
trait_data
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\Subject_data.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
dplyr::group_by(d_t, question) %>%
dplyr::summarise(
median = median(response, na.rm = TRUE),
mean = mean(response, na.rm = TRUE),
sd = sd(response, na.rm = TRUE)
)
analyse <- brm(response ~ question + (1|submission_id), family = "cumulative", data=d_t)
analyse
trait_data
subj_data
trait_data
knitr::opts_chunk$set(echo = TRUE)
loo1 <- loo(model_1)
library(tidyverse)
library(readr)
library(brms)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S1_data.csv")
data
model_1 <- brm(formula = response ~ category, family = "cumulative", data = data)
model_2 <- brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model_3 <- brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data)
model_3 <- brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data)
pairs(model_3)
model_3.1 <- brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data, control = list(adapt_delta = 0.9, max_treedepth = 15 ))
model_1
model_2
model_3
model_3.1
loo1 <- loo(model_1)
loo2 <- loo(model_2)
loo3 <- loo(model_3)
loo3.1 <- loo(model_3.1)
loo1
loo2
loo3
loo3.1
loo_compare(loo1,loo2,loo3,loo3.1)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\02 main\\clean\\S4a_data_test.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
dplyr::group_by(d_t, question) %>%
dplyr::summarise(
median = median(response, na.rm = TRUE),
mean = mean(response, na.rm = TRUE),
sd = sd(response, na.rm = TRUE)
)
analyse <- brm(response ~ question + (1|submission_id), family = "cumulative", data=d_t)
analyse
