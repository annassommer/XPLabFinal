while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
install.packages(DescTools)
install.packages("DescTools")
library(tidyverse)
library(effsize)
library(dplyr)
library(readr)
library(tidyr)
library(DescTools)
fz_list <- c()
row <- 1
while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
FisherZ(exp_data$rho[1])
FisherZ(double(exp_data$rho[1]))
getRoh <- function(row){
rho <- strsplit(row, ",")
rho <- rho[[1]]
rho <- strsplit(rho[4],"=")
rho <- rho[[1]]
rho <- strsplit(rho[2],"\\)")
rho <- rho[[1]]
return(double(rho))
}
rho_list <- c()
row <- 1
while(row <= nrow(exp_data)){
rho <- getRoh(exp_data$pearson[row])
rho_list <- c(rho_list, rho)
row <- row+1
}
exp_data$rho <- rho_list
getRoh <- function(row){
rho <- strsplit(row, ",")
rho <- rho[[1]]
rho <- strsplit(rho[4],"=")
rho <- rho[[1]]
rho <- strsplit(rho[2],"\\)")
rho <- rho[[1]]
return(rho)
}
rho_list <- c()
row <- 1
while(row <= nrow(exp_data)){
rho <- getRoh(exp_data$pearson[row])
rho_list <- c(rho_list, rho)
row <- row+1
}
exp_data$rho <- rho_list
exp_data
exp_data <- mutate(exp_data, rho = double(rho))
exp_data <- mutate(exp_data, rho = strtoi(rho))
exp_data <- mutate(exp_data, rho = strtoi(rho))
exp_data
exp_data <- mutate(exp_data, rho = strtoi(as.character(rho)))
exp_data
rho_list <- c()
row <- 1
while(row <= nrow(exp_data)){
rho <- getRoh(exp_data$pearson[row])
rho_list <- c(rho_list, rho)
row <- row+1
}
exp_data$rho <- rho_list
exp_data <- mutate(exp_data, rho = strtoi(as.character(rho)))
exp_data
rho_list <- c()
row <- 1
while(row <= nrow(exp_data)){
rho <- getRoh(exp_data$pearson[row])
rho_list <- c(rho_list, rho)
row <- row+1
}
exp_data$rho <- rho_list
exp_data <- mutate(exp_data, rho = as.numeric(rho))
exp_data
glimpse(exp_data)
fz_list <- c()
row <- 1
while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
fz_list
fz_list <- c()
row <- 1
while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
fz_list
exp_data$rho
fz_list <- c()
row <- 1
while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
exp_data$fz_list <- fz_list
glimpse(exp_data)
fz_list <- c()
row <- 1
while(row <= nrow(exp_data)){
fz <- FisherZ(exp_data$rho[row])
fz_list <- c(fz_list, fz)
row <- row+1
}
exp_data$fisher_z <- fz_list
glimpse(exp_data)
analysed_data <- select(exp_data, ID, pearson, rho,fisher_z)
analysed_data <- select(exp_data, ID, pearson, rho,fisher_z)
analysed_data
fz <- analysed_data$fisher_z
mean(fz)
name <- colnames(df.upright_t)[2]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
cor.test(up,inv,method = "pearson")
name <- colnames(df.upright_t)[2]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
cor.test(up,inv,method = "pearson")
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
cor.test(up,inv,method = "pearson")
name <- colnames(df.upright_t)[6]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
cor.test(up,inv,method = "pearson")
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
cor.test(up,inv,method = "pearson")
name <- colnames(df.upright_t)[col]
inv <- as.double(df.inverted_t[,name])
name <- colnames(df.upright_t)[col]
inv <- as.double(df.inverted_t[,name])
name <- colnames(df.upright_t)[col]
inv <- as.double(df.inverted_t[,name])
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
c(inv)
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv <- c(inv)
inv
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv
colnames(df.upright_t) <- df.upright_t[1,]
df.upright_t
df.upright_t <- df.upright_t[-1,]
colnames(df.inverted_t) <- df.inverted_t[1,]
df.inverted_t <- df.inverted_t[-1,]
df.upright_t
df.upright_t <- df.upright_t[-1,]
colnames(df.inverted_t) <- df.inverted_t[1,]
df.inverted_t <- df.inverted_t[-1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t <- t(upright)
inverted_t <- t(inverted)
uptight_t
upright <- select(exp_data, ID, ends_with("upright"))
inverted <- select(exp_data, ID, ends_with("inverted"))
upright_t <- t(upright)
inverted_t <- t(inverted)
uptight_t
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t)
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t)
upright_t[0]
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t[0]
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t[1]
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(df.upright_t) <- uptight_t[1,]
colnames(df.upright_t) <- upright_t[1,]
colnames(df.inverted_t) <- df.inverted_t[1,]
df.inverted_t <- df.inverted_t[-1,]
colnames(df.upright_t) <- upright_t[1,]
df.upright_t
colnames(df.inverted_t) <- df.inverted_t[1,]
df.inverted_t <- df.inverted_t[-1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
upright_t
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(df.upright_t) <- upright_t[1,]
df.upright_t
colnames(df.inverted_t) <- inverted_t[1,]
colnames(df.upright_t) <- upright_t[1,]
upright_t
colnames(df.inverted_t) <- inverted_t[1,]
colnames(upright_t) <- upright_t[1,]
upright_t
colnames(df.inverted_t) <- inverted_t[1,]
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
head(upright_t)
head(df.upright_t)
colnames(df.inverted_t) <- inverted_t[1,]
colnames(upright_t) <- upright_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
df.upright_t<-upright_t
head(upright_t)
head(df.upright_t)
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
df.upright_t<-upright_t
df.upright_t
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
df.upright_t
colnames(df.inverted_t) <- inverted_t[1,]
colnames(upright_t) <- upright_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
colnames(df.upright_t)<- colnames(upright_t)
df.upright_t
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1]
upright_t
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
upright_t
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
df.upright_t
colnames(df.inverted_t) <- inverted_t[1,]
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
colnames(inverted_t) <- inverted_t[1,]
inverted_t<-inverted_t[-1,]
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
name <- colnames(df.upright_t)[col]
inv <- as.double(df.inverted_t[,name])
up <- as.double(df.upright_t[,name])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
name <- colnames(upright_t)[col]
inv <- as.double(inverted_t[,name])
up <- as.double(upright_t[,name])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
exp_data$pearson <- pearson
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
colnames(inverted_t) <- inverted_t[1,]
inverted_t<-inverted_t[-1,]
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
name <- colnames(upright_t)[col]
inv <- as.double(inverted_t[,name])
up <- as.double(upright_t[,name])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
exp_data$pearson <- pearson
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv
as.double(inverted_t[,1])
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
inv <- as.double(inverted_t[,col])
up <- as.double(upright_t[,col])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
exp_data$pearson <- pearson
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,name])
inv
as.double(inverted_t[,1])
name <- colnames(df.upright_t)[1]
inv <- as.double(df.inverted_t[,1])
inv
as.double(inverted_t[,1])
exp_data$pearson
inv <- as.double(inverted_t[,1])
up <- as.double(upright_t[,1])
cor.test(up,inv,method = "pearson")
knitr::opts_chunk$set(echo = TRUE)
install.packages("DescTools")
library(tidyverse)
library(effsize)
library(dplyr)
library(readr)
library(tidyr)
library(DescTools)
exp_data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\03 paper\\clean\\S4b_exp_data.csv")
subj_data <- read_csv( "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\03 paper\\clean\\S4b_subject_data.csv")
exp_data
upright <- select(exp_data, ID, ends_with("upright"))
inverted <- select(exp_data, ID, ends_with("inverted"))
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
colnames(inverted_t) <- inverted_t[1,]
inverted_t<-inverted_t[-1,]
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
inv <- as.double(inverted_t[,col])
up <- as.double(upright_t[,col])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
exp_data$pearson <- pearson
inv <- as.double(inverted_t[,1])
up <- as.double(upright_t[,1])
cor.test(up,inv,method = "pearson")
exp_data
exp_data$pearson[1]
getCorr <- function(row){
corr <- strsplit(row, ",")
corr <- corr[[1]]
corr <- strsplit(corr[4],"=")
corr <- corr[[1]]
corr <- strsplit(corr[2],"\\)")
corr <- corr[[1]]
return(corr)
}
corr_list <- c()
row <- 1
while(row <= nrow(exp_data)){
corr <- getCorr(exp_data$pearson[row])
corr_list <- c(corr_list, corr)
row <- row+1
}
exp_data$Sesnsitivity_correlation <- corr_list
exp_data <- mutate(exp_data, Sesnsitivity_correlation = as.numeric(corr))
analysed_data <- select(exp_data, ID, pearson, Sesnsitivity_correlation)
analysed_data
library(tidyverse)
library(effsize)
library(dplyr)
library(readr)
library(tidyr)
library(DescTools)
exp_data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\03 paper\\clean\\S4b_exp_data.csv")
subj_data <- read_csv( "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\03 paper\\clean\\S4b_subject_data.csv")
exp_data
upright <- select(exp_data, ID, ends_with("upright"))
inverted <- select(exp_data, ID, ends_with("inverted"))
upright_t <- t(upright)
inverted_t <- t(inverted)
colnames(upright_t) <- upright_t[1,]
upright_t<-upright_t[-1,]
colnames(inverted_t) <- inverted_t[1,]
inverted_t<-inverted_t[-1,]
pearson <- c()
col <- 1
while(col <= ncol(upright_t)){
inv <- as.double(inverted_t[,col])
up <- as.double(upright_t[,col])
p_val <- cor.test(up,inv,method = "pearson")
pearson <- c(pearson, toString(p_val))
col <- col+ 1
}
exp_data$pearson <- pearson
inv <- as.double(inverted_t[,1])
up <- as.double(upright_t[,1])
cor.test(up,inv,method = "pearson")
exp_data
exp_data$pearson[1]
getCorr <- function(row){
corr <- strsplit(row, ",")
corr <- corr[[1]]
corr <- strsplit(corr[4],"=")
corr <- corr[[1]]
corr <- strsplit(corr[2],"\\)")
corr <- corr[[1]]
return(corr)
}
corr_list <- c()
row <- 1
while(row <= nrow(exp_data)){
corr <- getCorr(exp_data$pearson[row])
corr_list <- c(corr_list, corr)
row <- row+1
}
exp_data$Sesnsitivity_correlation <- corr_list
exp_data <- mutate(exp_data, Sesnsitivity_correlation = as.numeric(corr))
analysed_data <- select(exp_data, ID, pearson, Sesnsitivity_correlation)
analysed_data
corr_list
exp_data
exp_data$pearson[7]
inv <- as.double(inverted_t[,7])
up <- as.double(upright_t[,7])
cor.test(up,inv,method = "pearson")
corr_list <- c()
row <- 1
while(row <= nrow(exp_data)){
corr <- getCorr(exp_data$pearson[row])
corr_list <- c(corr_list, corr)
row <- row+1
}
corr_list
exp_data$Sesnsitivity_correlation <- corr_list
exp_data <- mutate(exp_data, Sesnsitivity_correlation = as.numeric(corr_list))
analysed_data <- select(exp_data, ID, pearson, Sesnsitivity_correlation)
analysed_data
input <- analysed_data$Sesnsitivity_correlation
mean(input)
input <- analysed_data$Sesnsitivity_correlation
mean(input, na.rm = TRUE)
sd(analysed_data$Sesnsitivity_correlation, na.rm = TRUE)
mean(analysed_data$Sesnsitivity_correlation, na.rm = TRUE)
library(tidyverse)
library(effsize)
library(dplyr)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
install.packages("DescTools")
install.packages("Rmisc")
install.packages("DescTools")
library(tidyverse)
library(effsize)
library(dplyr)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
CI(analysed_data$Sesnsitivity_correlation, ci=0.95)
CI(analysed_data$Sesnsitivity_correlation, na.rm = TRUE, ci=0.95)
c( confintLow (0.95 , x) ,  confintHigh (0.95 , x)
> confintLow<−function(gamma,  x)  { # untere  Grenze  desKonfidenzintervalls+return(mean(x)+qnorm((1−gamma)/2)∗1/sqrt(length(x) ) )+ }> confintHigh<−function(gamma,  x)  { # obere  Grenze  desKonfidenzintervalls+return(mean(x)+qnorm(1−(1−gamma)/2)∗1/sqrt(length(x) ) )+ }
confintLow<−function(gamma,  x)  {
return(mean(x)+qnorm((1−gamma)/2)∗1/sqrt(length(x) ) ) }
confintHigh<−function(gamma,  x)  { return(mean(x)+qnorm(1−(1−gamma)/2)∗1/sqrt(length(x) ) ) }
c( confintLow (0.95 , x) ,  confintHigh (0.95 , x) )
confintLow<−function(gamma,  x)  {
return(mean(x)+qnorm((1−gamma)/2)∗1/sqrt(length(x) ) ) }
confintHigh<−function(gamma,  x)  { return(mean(x)+qnorm(1−(1−gamma)/2)∗1/sqrt(length(x) ) ) }
c( confintLow (0.95 , analysed_data$Sesnsitivity_correlation) ,  confintHigh (0.95 , analysed_data$Sesnsitivity_correlation) )
var(analysed_data$Sesnsitivity_correlation, na.rm = TRUE)
c(mean-1.96*sd, mean+1.96*sd)
