}
pearson <-c()
for(i in dom_list)
print(dom_list[["i"]])
pearson <-c()
for(i in dom_list)
print(dom_list[[i]])
pearson <-c()
for(i in dom_list)
print(i)
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, cor.test(inverted_trust$response,upright_trust$response,method = "pearson"))
}
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, cor.test(inverted_trust$response,upright_trust$response,method = "pearson"))
}
pearson
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, toString(cor.test(inverted_trust$response,upright_trust$response,method = "pearson")))
}
pearson
results_dom
inv <- upright_dom$response
up <- inverted_dom$response
cor.test(up,inv,method = "pearson")
results_dom[1]
results_dom <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
results_dom <- c(pearson, toString(cor.test(inverted_trust$response,upright_trust$response,method = "pearson")))
}
results_dom[1]
corr_list <- c()
row <- 1
while(row <= nrow(results_dom)){
corr <- getCorr(results_dom$pearson[row])
corr_list <- c(corr_list, corr)
row <- row+1
}
corr_list <- c()
for(elem in results_dom){
corr <- getCorr(elem)
corr_list <- c(corr_list, corr)
}
results_dom$Sensitivity_correlation <- corr_list
results_dom <- mutate(results_dom, Sensitivity_correlation = as.numeric(corr_list))
results_dom$Sensitivity_correlation <- corr_list
results_dom <- mutate(results_dom, Sensitivity_correlation = as.numeric(corr_list))
results_dom
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, toString(cor.test(inverted_trust$response,upright_trust$response,method = "pearson")))
}
results_dom$pearson <- pearson
results_dom
corr_list <- c()
row <- 1
while(row <= nrow(results_dom)){
corr <- getCorr(results_dom$pearson[row])
corr_list <- c(corr_list, corr)
row <- row+1
}
corr_list <- c()
row <- 1
for(elem in results_dom$pearson)){
corr_list <- c()
row <- 1
for(elem in results_dom$pearson){
corr <- getCorr(results_dom$pearson[elem])
corr_list <- c(corr_list, corr)
row <- row+1
}
results_dom$Sensitivity_correlation <- corr_list
results_dom <- mutate(results_dom, Sensitivity_correlation = as.numeric(corr_list))
results_dom
Sensitivity_correlation <- c()
for(elem in pearson){
corr <- getCorr(elem)
corr_list <- c(corr_list, corr)
}
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright_trust <- filter(i, pictureFormat == "Upright")
inverted_trust <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, toString(cor.test(inverted_trust$response,upright_trust$response,method = "pearson")))
}
Sensitivity_correlation <- c()
for(elem in pearson){
corr <- getCorr(elem)
corr_list <- c(corr_list, corr)
}
Sensitivity_correlation <- as.numeric(Sensitivity_correlation))
Sensitivity_correlation <- as.numeric(Sensitivity_correlation)
Sensitivity_correlation
Sensitivity_correlation <- c()
for(elem in pearson){
corr <- getCorr(elem)
Sensitivity_correlation <- c(Sensitivity_correlation, corr)
}
Sensitivity_correlation <- as.numeric(Sensitivity_correlation)
Sensitivity_correlation
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S1_data_clean.csv")
data
trust <- filter(data, category == "Vertrauenswürdigkeit")
dom <- filter(data, category == "Dominanz")
trust
dom
ids <- unique(trust$experiment_id)
trust_list <- list()
for(i in 1:length(ids)){
id <- ids[i]
mini.df <- data.frame(trust[trust$experiment_id == id, ])
trust_list[[id]] <- mini.df
}
pearson_trust <-c()
for(i in trust_list)
if(! is.null(i)){
upright <- filter(i, pictureFormat == "Upright")
inverted <- filter(i, pictureFormat == "Inverted")
pearson_trust <- c(pearson_trut, toString(cor.test(inverted$response,upright$response,method = "pearson")))
}
pearson_trust <-c()
for(i in trust_list)
if(! is.null(i)){
upright <- filter(i, pictureFormat == "Upright")
inverted <- filter(i, pictureFormat == "Inverted")
pearson_trust <- c(pearson_trust, toString(cor.test(inverted$response,upright$response,method = "pearson")))
}
Sensitivity_correlation_trust <- c()
for(elem in pearson_trust){
corr <- getCorr(elem)
Sensitivity_correlation_trust <- c(Sensitivity_correlation_trust, corr)
}
Sensitivity_correlation_trust <- as.numeric(Sensitivity_correlation_trust)
Sensitivity_correlation_trust
ids <- unique(dom$experiment_id)
dom_list <- list()
for(i in 1:length(ids)){
id <- ids[i]
mini.df <- data.frame(dom[dom$experiment_id == id, ])
dom_list[[id]] <- mini.df
}
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright <- filter(i, pictureFormat == "Upright")
inverted <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, toString(cor.test(inverted$response,upright$response,method = "pearson")))
}
Sensitivity_correlation_dom <- c()
for(elem in pearson){
corr <- getCorr(elem)
Sensitivity_correlation_dom <- c(Sensitivity_correlation_dom, corr)
}
Sensitivity_correlation_dom <- as.numeric(Sensitivity_correlation_dom)
Sensitivity_correlation_dom
trust_cor <- results_trust$Sensitivity_correlation
trust_cor <- Sensitivity_correlation_trust
dom_cor <- Sensitivity_correlation_dom
trust_cor
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5)
m_trust <-median(trust_cor)
sd_trust <- sd(trust_cor)
print('Trustworthy', quote = FALSE)
print(c("Median:", m_trust, "Standard deviation:",sd_trust), quote = FALSE)
m_dom <- median(dom_cor)
sd_dom <- sd(dom_cor)
print("Dominance",  quote = FALSE)
print(c("Median:", m_dom, "Standard deviation:",sd_dom), quote = FALSE)
t.test(trust_cor,dom_cor)
cohen.d(trust, dom)
cohen.d(trust_cor, dom_cor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\data_all.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, experiment_id)
trait_data
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, experiment_id)
pic_data
subj_data <- select(data, category, age, gender, languages, experiment_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$experiment_id), ]
subj_data
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\Subject_data_clean.csv")
write_csv(trait_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S4a_data_clean.csv")
write_csv(pic_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S1_data_clean.csv")
getCorr <- function(row){
corr <- strsplit(row, ",")
corr <- corr[[1]]
corr <- strsplit(corr[4],"=")
corr <- corr[[1]]
corr <- strsplit(corr[2],"\\)")
corr <- corr[[1]]
return(corr)
}
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S1_data_clean.csv")
data
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S1_data_clean.csv")
data
trust <- filter(data, category == "Vertrauenswürdigkeit")
dom <- filter(data, category == "Dominanz")
trust
dom
ids <- unique(trust$experiment_id)
trust_list <- list()
for(i in 1:length(ids)){
id <- ids[i]
mini.df <- data.frame(trust[trust$experiment_id == id, ])
trust_list[[id]] <- mini.df
}
pearson_trust <-c()
for(i in trust_list)
if(! is.null(i)){
upright <- filter(i, pictureFormat == "Upright")
inverted <- filter(i, pictureFormat == "Inverted")
pearson_trust <- c(pearson_trust, toString(cor.test(inverted$response,upright$response,method = "pearson")))
}
Sensitivity_correlation_trust <- c()
for(elem in pearson_trust){
corr <- getCorr(elem)
Sensitivity_correlation_trust <- c(Sensitivity_correlation_trust, corr)
}
Sensitivity_correlation_trust <- as.numeric(Sensitivity_correlation_trust)
Sensitivity_correlation_trust
ids <- unique(dom$experiment_id)
dom_list <- list()
for(i in 1:length(ids)){
id <- ids[i]
mini.df <- data.frame(dom[dom$experiment_id == id, ])
dom_list[[id]] <- mini.df
}
pearson <-c()
for(i in dom_list)
if(! is.null(i)){
upright <- filter(i, pictureFormat == "Upright")
inverted <- filter(i, pictureFormat == "Inverted")
pearson <- c(pearson, toString(cor.test(inverted$response,upright$response,method = "pearson")))
}
Sensitivity_correlation_dom <- c()
for(elem in pearson){
corr <- getCorr(elem)
Sensitivity_correlation_dom <- c(Sensitivity_correlation_dom, corr)
}
Sensitivity_correlation_dom <- as.numeric(Sensitivity_correlation_dom)
Sensitivity_correlation_dom
trust_cor <- Sensitivity_correlation_trust
dom_cor <- Sensitivity_correlation_dom
trust_cor
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5)
m_trust <-median(trust_cor)
sd_trust <- sd(trust_cor)
print('Trustworthy', quote = FALSE)
print(c("Median:", m_trust, "Standard deviation:",sd_trust), quote = FALSE)
m_dom <- median(dom_cor)
sd_dom <- sd(dom_cor)
print("Dominance",  quote = FALSE)
print(c("Median:", m_dom, "Standard deviation:",sd_dom), quote = FALSE)
t.test(trust_cor,dom_cor)
cohen.d(trust_cor, dom_cor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S4a_data_clean.csv")
data
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S4a_data_clean.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
m_trust <-median(trust$response)
sd_trust <- sd(trust$response)
print('Trustworthy', quote = FALSE)
print(c("Median:", m_trust, "Standard deviation:",sd_trust), quote = FALSE)
m_dom <- median(dom$response)
sd_dom <- sd(dom$response)
print("Dominance",  quote = FALSE)
print(c("Median:", m_dom, "Standard deviation:",sd_dom), quote = FALSE)
t.test(trust$response,dom$response,paired=TRUE)
cohen.d(trust$response, dom$response, paired = TRUE)
summarized_results <- data %>%
dplyr::group_by(gender) %>%
dplyr::summarize(mean_age = mean(age))
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\Subject_data_clean.csv")
data
ggplot(data, aes(x=gender, y=age, fill = gender)) +
geom_boxplot()
summarized_results <- data %>%
dplyr::group_by(gender) %>%
dplyr::summarize(mean_age = mean(age))
summarized_results
m_age <-median(data$age)
sd_age <- sd(data$age)
print('Age', quote = FALSE)
print(c("Median:", m_age, "Standard deviation:",sd_age), quote = FALSE)
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5)
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5, whisk = TRUE)
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5,  whisklty = 1)
bwplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5,  whisklty = 1)
boxplot(trust_cor,dom_cor,ylab="correlations of inverted and upright pictures",names=c("trustworthy","dominant"), col=c("tomato","cyan"),boxwex=0.5,  whisklty = 1)
knitr::opts_chunk$set(echo = TRUE)
install.packages("MASS")
library(tidyverse)
library(effsize)
library(MASS)
library(effsize)
library(MASS)
library(tidyverse)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S4a_data_clean.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
d_t
ggplot(d_t, aes(x= question, y= response, fill = question)) +
geom_boxplot()
dplyr::group_by(d_t, question) %>%
dplyr::summarise(
median = median(response, na.rm = TRUE),
mean = mean(response, na.rm = TRUE),
sd = sd(response, na.rm = TRUE)
)
shapiro.test(trust$response)
shapiro.test(dom$response)
var.test(response ~ question, data = d_t)
t.test(trust$response,dom$response,paired=TRUE)
cohen.d(trust$response, dom$response, paired = TRUE)
dt <- d_t
dt$question <- factor(dt$question)
model <- polr(question ~ response, data = dt)
m <- polr(question ~ response, data = d_t, Hess=TRUE)
d_t$question <- factor(d_t$question)
m <- polr(question ~ response, data = d_t, Hess=TRUE)
analyse <- brm(response ~ question$VertrauenswÜrdigkeit + question$Dominanz, data = d_t)
library(effsize)
library(brms)
library(tidyverse)
analyse <- brm(response ~ question$VertrauenswÜrdigkeit + question$Dominanz, data = d_t)
knitr::opts_chunk$set(echo = TRUE)
data <- read_csv("C:\\Users\\sarah\\Documents\\Final_Xlab\\XPLabFinal\\data\\01 pilot\\data_all.csv")
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
data <- read_csv("C:\\Users\\sarah\\Documents\\Final_Xlab\\XPLabFinal\\data\\01 pilot\\data_all.csv")
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\data_all.csv")
data
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
regression_data$Dom <- dom$response
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
regression_data$Dom <- dom$response
trust <- filter(data, question == "Vertrauenswürdigkeit")
dom <- filter(data, question == "Dominanz")
d_t <- rbind(trust,dom)
trust
dom
d_t
regression_data$Dom <- dom$response
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(broom)
library(purrr)
library(tidyr)
library(dplyr)
library(brms)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(broom)
library(purrr)
library(tidyr)
library(dplyr)
library(ggpubr)
library(brms)
trust_cor <- Sensitivity_correlation_trust
dom_cor <- Sensitivity_correlation_dom
my_data <- data.frame(
group = rep(c("Trsustworthy", "Dominance"), each = 2),
cor = c(trust_cor,  dom_cor)
)
my_data
brm(formula = response ~category, data)
brm(formula = response ~ category, family = "cummulative", data = data)
brm(formula = response ~ category, family = "cumulative", data = data)
brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model_1 <- brm(formula = response ~ category, family = "cumulative", data = data)
model_2<- brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model_2
loo(model_1, model_2)
model_1
model_2
loo(model_1, model_2)
model_3 <-brm(formula = response ~ category +(pictureFormat|category))
model_3 <-brm(formula = response ~ category +(pictureFormat|category), family = "cumulative", data = data)
model_3 <-brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data)
loo?
model_3
model_1
model_2
loo1<-loo(model_1)
loo2 <-loo(model_2)
loo_compare(loo1,loo2)
loo1
loo2
loo_compare(loo1,loo2)
loo1
loo2
loo_compare(loo1,loo2)
loo1
loo1
loo2
model_3 <-brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data)
model_3
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
library(brms)
data <- read_csv("C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\S1_data_clean.csv")
data
model_1 <- brm(formula = response ~ category, family = "cumulative", data = data)
model_2 <- brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model_2 <- brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model_3 <- brm(formula = response ~ category + (category|pictureFormat), family = "cumulative", data = data)
model_4 <- brm(formula = response ~ category + (1|experiment_id), family = "cumulative", data = data)
model_5 <- brm(formula = response ~ category + pictureFormat + (1|experiment_id), family = "cumulative", data = data)
model_6 <- brm(formula = response ~ category + (category|pictureFormat) + (1|experiment_id), family = "cumulative", data = data)
loo1 <- loo(model_1)
loo2 <- loo(model_2)
loo3 <- loo(model_3)
loo4 <- loo(model_4)
loo5 <- loo(model_5)
loo6 <- loo(model_6)
loo1
loo2
loo3
loo4
loo5
loo6
loo_compare(loo1,loo2,loo3,loo4,loo5,loo6)
model_1
model_2
model_3
model_4
model_5
model_6
unlink('02 data_analysis_ordinal regression_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
model <- brm(formula = response ~ category + pictureFormat, family = "cumulative", data = data)
model <- brm(formula = response ~ category * pictureFormat, family = "cumulative", data = data)
faintr::compare_groups(model, list( category = "Dominanz"), list( condition = "Vertrauenswürdigkeit"))
test_data = mutate(data, category = factor(category), pictureFormat = factor(pictureFormat) )
test_data = mutate(data, category = factor(category), pictureFormat = factor(pictureFormat) )
model <- brm(formula = response ~ category * pictureFormat, family = "cumulative", data = data)
model <- brm(formula = response ~ category * pictureFormat, family = "cumulative", data = test_data)
model = brm(formula = response ~ category * pictureFormat, family = "cumulative", data = test_data)
faintr::compare_groups(model, list( category = "Dominanz"), list( condition = "Vertrauenswürdigkeit"))
faintr::compare_groups(model, list( category = "Dominanz"), list( condition = "Vertrauenswürdigkeit"))
faintr::compare_groups(model, list( category = "Dominanz"), list( category = "Vertrauenswürdigkeit"))
model
