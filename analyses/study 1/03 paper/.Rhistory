ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter]] <- id_data_pic
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if(#(colMeans(rt_pic) <
#(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
#colMeans(rt_pic) > rt_all_pic*3)
#|
(colMeans(rt_trait) <
(rt_all_trait -(rt_all_trait*3 - rt_all_trait))))
#| #colMeans(rt_trait) > rt_all_trait*3))
{
rt_data[[counter]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter]] <- id_data_pic
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
knitr::opts_chunk$set(echo = TRUE)
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
lengths(unique(pic_data["submission_id"]))
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_muster
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_same
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
data <- read_csv("C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\raw\\results_80_experimentXPLab_annassommer.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, submission_id)
pic_data
subj_data <- select(data, category, age, gender, languages, submission_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$submission_id), ]
subj_data
all_subjects_id<- unique(pic_data["submission_id"])
a <-list(0)
id_num <- 0
#creates a counter and variables for the outliers
counter = 1
while(counter <= lengths(all_subjects_id, use.names = FALSE)){
id_num <- all_subjects_id[[counter,1]]
id_data_pic <- filter(pic_data, submission_id == id_num)
#a <-  append(a,id_data_pic)
counter = counter +1
}
a["submission_id"]
lengths(unique(a["submission_id"]))
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_data_pic
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_data_pic
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\Subject_data_clean.csv")
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_muster
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_same
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
rt_data
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
data <- read_csv("C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\raw\\results_80_experimentXPLab_annassommer.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, submission_id)
pic_data
subj_data <- select(data, category, age, gender, languages, submission_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$submission_id), ]
subj_data
all_subjects_id<- unique(pic_data["submission_id"])
a <-list(0)
id_num <- 0
#creates a counter and variables for the outliers
counter = 1
while(counter <= lengths(all_subjects_id, use.names = FALSE)){
id_num <- all_subjects_id[[counter,1]]
id_data_pic <- filter(pic_data, submission_id == id_num)
#a <-  append(a,id_data_pic)
counter = counter +1
}
a["submission_id"]
lengths(unique(a["submission_id"]))
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_data_pic["submission_id"]
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_data_pic["submission_id"]
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_data_pic["submission_id"]
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\Subject_data_clean.csv")
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
length(all_same_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(effsize)
library(readr)
library(tidyr)
library(DescTools)
library(Rmisc)
library(dplyr)
library(checkmate)
data <- read_csv("C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\raw\\results_80_experimentXPLab_annassommer.csv")
data
trait_data <- filter(data, trial_name == 'rate_personality')
trait_data <- select(trait_data, trial_number, response, RT, question, timeSpent, submission_id)
trait_data
pic_data <-filter(data, trial_name == 'rate_face')
pic_data <- select(pic_data, response, RT, picture, pictureFormat, color, category, timeSpent, submission_id)
pic_data
subj_data <- select(data, category, age, gender, languages, submission_id)
subj_data <- filter(subj_data, complete.cases(category))
subj_data <- subj_data[!duplicated(subj_data$submission_id), ]
subj_data
all_subjects_id<- unique(pic_data["submission_id"])
a <-list(0)
id_num <- 0
#creates a counter and variables for the outliers
counter = 1
while(counter <= lengths(all_subjects_id, use.names = FALSE)){
id_num <- all_subjects_id[[counter,1]]
id_data_pic <- filter(pic_data, submission_id == id_num)
#a <-  append(a,id_data_pic)
counter = counter +1
}
a["submission_id"]
lengths(unique(a["submission_id"]))
#creates a list with all subject_ids
all_subjects_id<- unique(pic_data["submission_id"])
stop <- lengths(all_subjects_id, use.names = FALSE)
#creates a counter
counter_id = 1
all_same_data <- vector("list", stop)
muster_data <- vector("list", stop)
rt_data <- vector("list", stop)
#starts a while loop do go through all subjects
while(counter_id <= stop){
id_num <- all_subjects_id[[counter_id,1]]
#filters all the data of one subject
id_data_pic <- filter(pic_data, submission_id == id_num )
id_data_trait <-  filter(trait_data, submission_id == id_num )
#filters the rating of one subject
ratings_pic <- id_data_pic["response"]
ratings_trait <- id_data_trait["response"]
#filters the respones time of an subject and the standard dividion of the respones time of all subejects
rt_pic <- id_data_pic["RT"]
rt_trait <- id_data_trait["RT"]
rt_all_pic <- sd(pic_data[["RT"]])
rt_all_trait <- sd(trait_data[["RT"]])
#checks if the answer is allways the same
if(lengths(unique(ratings_pic))== 1 | lengths(unique(ratings_trait))== 1) {
pic_data <- filter(pic_data, submission_id !=     id_num)
trait_data <- filter(trait_data, submission_id == id_num )
all_same_data[[counter_id]] <- id_num
}
#filters the muster 1,2,3,4,5,6,7
i = 1
muster = 1
counter = 0
del = 0
while (i <= lengths(ratings_pic)){
if (muster == ratings_pic[i,1]){
counter = counter +1
}
muster = muster +1
if (muster == 7){
muster = 1
if (counter == 7){
del = del +1
counter = 0
}
}
i = i+1
}
if (del >= 4){
muster_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#filters for the respones time
if((colMeans(rt_pic) <
(rt_all_pic - (rt_all_pic*3 - rt_all_pic)))|
colMeans(rt_pic) > rt_all_pic*3)
{
rt_data[[counter_id]] <- id_num
pic_data <- filter(pic_data, submission_id != id_num)
trait_data <- filter(trait_data, submission_id == id_num )
}
#gets the next subject
counter_id = counter_id + 1
counter_id = asInt(counter_id)
}
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
length(all_same_data)
write_csv(subj_data, "C:\\Users\\User\\Documents\\Semester4\\Psychology Lab\\XPLabFinal\\data\\01 pilot\\Subject_data_clean.csv")
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
length(all_same_data)
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
all_same_data
num_out_same <- lengths(unique(all_same_data ["submission_id"]))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
unique(all_same_data)
num_out_same <- lengths(unique(all_same_data)
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_same <- lengths(unique(all_same_data))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_same
num_out_same <- length(unique(all_same_data))
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_same
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- lengths(unique(muster_data ["submission_id"]))
num_out_rt <- lengths(unique(rt_data ["submission_id"]))
num_out_same
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
num_out_same
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
num_out_muster
num_out_same <- length(unique(all_same_data)) -1
num_out_muster <- length(unique(muster_data)) -1
num_out_rt <- lengths(unique(rt_data)) -1
num_out_rt
write_csv(subj_data, "C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\clean\\Subject_data_clean.csv")
write_csv(trait_data, "C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\S4a_data_clean.csv")
write_csv(pic_data, "C:\\Users\\sarah\\Documents\\XPLabFinal\\data\\03 paper\\S1_data_clean.csv")
